name: Publish

on:
  push:
    branches:
      - "release/v*"

env:
  NODE_VERSION: 14.x

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      - uses: actions/setup-node@v2
        with:
          node-version: "${{ env.NODE_VERSION }}"
          registry-url: https://npm.pkg.github.com/
          always-auth: true
          scope: ${{ github.owner }}

      - name: Get package version
        id: package_version_str
        uses: martinbeentjes/npm-get-version-action@master

      - name: Parse package version
        id: pkgVersion
        uses: doptools/action-parse-semver@main
        with:
          version: "${{ steps.package_version_str.outputs.current-version }}"
          versionRegex: "(.*)"


      - name: Create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ github.token }}
          custom_tag: ${{ steps.pkgVersion.outputs.full }}

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ steps.pkgVersion.outputs.full }}
          name: Version ${{ steps.pkgVersion.outputs.full }}
          body: |
            Generated Release ${{ steps.pkgVersion.outputs.full }}
          draft: true
          prerelease: ${{ steps.version.outputs.isPrerelease }}

      - name: Init
        run: yarn

      - name: Set versions
        run: |
          npx lerna version ${{steps.refVersion.outputs.full}} --force-publish --no-commit-hooks --no-git-tag-version --no-push --yes
          git commit -a -m versions

      - name: Build
        run: yarn run build:libs -- --prod

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ github.token }}
        run: lerna publish --no-git-tag-version --no-commit-hooks --no-push --force-publish --yes --graph-type all ${{steps.pkgVersion.outputs.full}}
